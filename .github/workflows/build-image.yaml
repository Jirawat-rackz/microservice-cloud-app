name: CI Workflow microservice-cloud-app

on:
  push:
    branches:
      - main

# Cancel in progress workflows on pull_requests.
# https://docs.github.com/en/actions/using-jobs/using-concurrency#example-using-a-fallback-value
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  files-changed:
    name: detect what files changed
    runs-on: ubuntu-latest
    timeout-minutes: 3
    # Map a step output to a job output
    outputs:
      publisher-message: ${{ steps.changes.outputs.publisher-message }}
      consumer-message: ${{ steps.changes.outputs.consumer-message }}
      next-frontend: ${{ steps.changes.outputs.next-frontend }}
      pocketbase: ${{ steps.changes.outputs.pocketbase }}
      speech-to-text-service: ${{ steps.changes.outputs.speech-to-text-service }}
    steps:
      - uses: actions/checkout@v3

      - name: Check for backend file changes
        uses: dorny/paths-filter@v2
        id: changes
        with:
          token: ${{ github.token }}
          filters: ./.github/file-filters.yaml

  tag-version-commit:
    name: Get Tag version
    runs-on: ubuntu-latest
    timeout-minutes: 3
    outputs:
      tag-version: ${{ steps.tags.outputs.sha_short }}
    steps:
      - name: Get Tag Image
        id: tags
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

  build-next-frontend:
    # if: needs.files-changed.outputs.next-frontend == 'true'
    needs:
      - files-changed
      - tag-version-commit
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          file: ./next-frontend/Dockerfile
          push: true
          tags: rackz/next-frontend:${{ needs.tag-version-commit.outputs.tag-version }}

  build-speech-publisher:
    # if: needs.files-changed.outputs.publisher-message == 'true'
    needs:
      - files-changed
      - tag-version-commit
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          file: ./go-speech-publisher/Dockerfile
          push: true
          tags: rackz/speech-publisher:${{ needs.tag-version-commit.outputs.tag-version }}
          build-arg: |
            APP_NAME=speechpublisher
            APP_PORT=8080

  build-speech-consumer:
    # if: needs.files-changed.outputs.consumer-message == 'true'
    needs:
      - files-changed
      - tag-version-commit
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          file: ./go-speech-publisher/Dockerfile
          push: true
          tags: rackz/speech-consumer:${{ needs.tag-version-commit.outputs.tag-version }}
          build-arg: |
            APP_NAME=speechconsumer

  build-pocketbase:
    # if: needs.files-changed.outputs.pocketbase == 'true'
    needs:
      - files-changed
      - tag-version-commit
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          file: ./pocketbase/Dockerfile
          push: true
          tags: rackz/pocketbase:${{ needs.tag-version-commit.outputs.tag-version }}
          build-arg: |
            VERSION=0.13.4
